name: Deploy to server

on:
  push:
    branches: [feature/*,]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - uses: actions/checkout@v4

      - name: Copy .env
        run: cp .env.example .env
      - name: Install composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate

      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install node dependencies
        run: npm ci
      - name: Setup Project
        run: |
          npm run build

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
            mkdir -p database
            touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: |
          php artisan test

      - name: Deploy PHP to Server
        if: ${{ success() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            cd domains
            cd training.nicesoft.me/
            git fetch
            git checkout ${{ env.BRANCH }}
            git pull
            php ~/composer.phar install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
            php artisan migrate:fresh --seed --force
      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Copy Build Files to Target Server
        run: |
          rsync -r -e "ssh -p ${{ secrets.SSH_PORT }}" ${{ github.workspace }}/public/build/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/domains/training.nicesoft.me/public/build
